'use strict';
// class: template
// object: instance of a class
// Javascript classes
// - introduced in ES6
// - syntactical sugar over prototype-based inheritance

// 1. Class declarations ÌÅ¥ÎûòÏä§ ÏÑ†Ïñ∏?
class Person {
  // construcor
  constructor(name, age) {
    // fields
    this.name = name;
    this.age = age;
  }
  // methods
  speak() {
    console.log(`${this.name}: hello!`);
  }
}

const helli = new Person('hllie', 20);
console.log(helli.name);
console.log(helli.age);
helli.speak();

// 2. Getter and Setter
class User {
  constructor(firstName, lastName, age) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.age = age;
  }

  get age() {
    return this._age;
  }

  set age(value) {
    // if (value < 0) {
    //     throw Error('age can not be negative');
    // }          -- ÏûÖÎ†•Í∞íÏù¥ ÏùåÏàòÎùºÎ©¥ ÏóêÎü¨Î©îÏãúÏßÄ ÎçòÏ†∏
    // this._age = value;
    this._age = value < 0 ? 0 : value;
    // ÏúÑ ÏóêÎü¨Î¨∏Íµ¨ ÌòπÏùÄ ÏïÑÎûò ÏÇºÌï≠ÏãùÏúºÎ°ú valueÍ∞Ä ÏùåÏàòÎ©¥ 0ÏúºÎ°ú ÏπòÌôò, ÏïÑÎãàÎ©¥ value ÏÇ¨Ïö©
  }
}

const user1 = new User('Steve', 'Jobs', -3);
console.log(user1.age);

// ÏÉÅÏÜç

class Shape {
  constructor(width, height, color) {
    this.width = width;
    this.height = height;
    this.color = color;
  }

  draw() {
    console.log(`drawing ${this.color} color!`);
  }

  getArea() {
    return this.width * this.height;
  }
}

const randomDicd = new Shape(30, 5, 'red');
randomDicd.draw();

class Rectangle extends Shape {} // Í∏∞Ï°¥Ïùò shape ÌÅ¥ÎûòÏä§Ïóê ÌôïÏû•Ï∂îÍ∞Ä?
class Triangle extends Shape {
  draw() {
    // ÏõêÎûò ÏïÑÎûòÏùò shape draw Ìï®ÏàòÏòÄÎäîÎç∞
    // console.log(`drawing ${this.color} color!`);
    console.log('üßÄ'); // Ïù¥Í±∏Î°ú Ïû¨ÏÑ§Ï†ï
    // Í∑ºÎç∞ Í∑∏Îü¨Îã§Î≥¥Î©¥ drawÎûë getareaÎûë Îã§ Î∞îÍæºÍ±∞Îùº
    // ÏõêÎûò ÏóÑÎπ† draw Î≥¥Í≥† Ïã∂ÏúºÎ©¥ ÏïÑÎûòÏùò super. ÏÇ¨Ïö©Ìï¥Ï§ÄÎã§!
    super.draw();
  }

  getArea() {
    return (this.width * this.height) / 2;
  } // ÏÇºÍ∞ÅÌòïÏùò Î©¥Ï†Å Ìï®ÏàòÎäî shape getarea Ìï®ÏàòÏóêÏÑú Î≥ÄÌòï ÌïÑÏöî
  // ÌïÑÏöîÌïú Ìï®ÏàòÎ™Ö Îî∞Îã§Í∞Ä Í∑∏Í≤ÉÎßå Ïû¨ÏÑ§Ï†ïÌï¥Ï£ºÎ©¥ Ïû¨ÏÇ¨Ïö© Í∞ÄÎä•
}

const rectangle = new Rectangle(20, 20, 'blue');
rectangle.draw();
console.log(rectangle.getArea());

const triangle = new Triangle(30, 15, 'pink');
triangle.draw();
console.log(triangle.getArea());
